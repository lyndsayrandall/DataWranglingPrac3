"0","# Global Utility functions could be removed to source file."
"0","checkNAInCols <- function(checkDF,checkDFVarNames) {"
"0","   chkedAllDFList <- list()"
"0","  for ( posn in 1:length(checkDF)) {"
"0","    chkIndDFList <- list()"
"0","    checkCol <- colnames(checkDF[[posn]])"
"0","    count <- 1"
"0","    for (inputCol in checkCol) {"
"0","      sumNA <- checkDF[[1]][inputCol] %>%"
"0","           summarise(numNa = sum(is.na(.)))"
"0","      if (is.numeric(checkDF[[1]][inputCol][[1]]) | is.integer(checkDF[[1]][inputCol][[1]])) {"
"0","        sumNAN <- sum(is.nan(checkDF[[1]][[inputCol]])) "
"0","        sumINF <- sum(is.infinite(checkDF[[1]][[inputCol]]))"
"0","      }"
"0","      else {"
"0","        sumNAN <- 0"
"0","        sumINF <- 0"
"0","      }"
"0","      tmpSums <- list( sumNA = sumNA[[1]],"
"0","                   sumNAN = sumNAN[[1]],"
"0","                   sumINF = sumINF[[1]])"
"0","      tmpSumsByCol <- list(tmpColName = c(tmpSums))"
"0","      names(tmpSumsByCol) <- inputCol"
"0","      chkIndDFList <- append(chkIndDFList,tmpSumsByCol)"
"0","      count <- count + 1"
"0","    }"
"0","    tmpDFSUMCOLS <- list(tmpDFName = c(chkIndDFList))"
"0","    names(tmpDFSUMCOLS) <- checkDFVarNames[[posn]]"
"0","    chkedAllDFList <- append(chkedAllDFList,tmpDFSUMCOLS)"
"0","  }"
"0","  return(tmpDFSUMCOLS)"
"0","}"
"0",""
"0","matrixNANANINF <- function(inputListsSums) {"
"0","  matrixDF <- matrix(NA, nrow = length(inputListsSums[[1]]), ncol = length(inputListsSums[[1]][[1]]))"
"0","  rownames(matrixDF) <- names(inputListsSums[[1]])"
"0","  colnames(matrixDF) <- names(inputListsSums[[1]][[1]])"
"0","  for (row in 1:length(inputListsSums[[1]])) {"
"0","    for (col in 1:length(inputListsSums[[1]][[1]])) {"
"0","      matrixDF[c(row),c(col)] <- inputListsSums[[1]][[row]][[col]]"
"0","    }"
"0","  }"
"0","  return(matrixDF)"
"0","}"
"0",""
"0","dispHead <- function(chkAttrDf) {"
"0","  if (dim(chkAttrDf)[[1]] > 0) {"
"0","     res <- head(chkAttrDf,5)"
"0","  } else{"
"0","    res <- cat(paste(deparse(substitute(chkAttrDf)),""is empty.\n""))"
"0","  }"
"0","  return(res)"
"0","}"
"0",""
"0","lat <- c( -39.2,-34)"
"0","long <- c(140, 150)"
"0",""
"0","VICLATLONG <- c( lat,long) "
